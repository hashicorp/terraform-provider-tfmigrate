# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  workflow_call:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@38e1018663fa5173f3968ea0777460d3de38f256 # v5.3.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      # Temporarily download Terraform 1.8 prerelease for function documentation support.
      # When Terraform 1.8.0 final is released, this can be removed.
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: '1.8.0-alpha20240216'
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: '${{ github.head_ref }}'
      - name: Confirm current branch with remote
        run: |
          echo "Current branch with remote: $(git rev-parse --abbrev-ref --symbolic-full-name @{u})"

      - name: Setup Go
        uses: actions/setup-go@v5.3.0 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false

      - name: Download dependencies
        run: go mod download

      - name: Check Modified files
        run: |
          COMMIT_SHA=${{ github.sha }}
          REPO=${{ github.repository }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          CHANGED_FILES=$(curl -s -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/commits/$COMMIT_SHA" | jq -r '.files[] | select(.status == "added" or .status == "modified") | .filename')
          echo "Changed files:"
          echo "$CHANGED_FILES"
           FILE_COUNT=$(echo "$CHANGED_FILES" | wc -l)
          if [[ "$FILE_COUNT" -eq 2 ]] && echo "$CHANGED_FILES" | grep -q -x "go.mod" && echo "$CHANGED_FILES" | grep -q -x "go.sum"; then
            echo "ONLY_GO_MOD_SUM=true" >> $GITHUB_ENV
          else
            echo "ONLY_GO_MOD_SUM=false" >> $GITHUB_ENV
          fi

      - name: Run acceptance test
        if: ${{ env.ONLY_GO_MOD_SUM == 'false' || github.actor != 'dependabot[bot]' }}
        env:
          TF_ACC: "1"
          TF_GIT_PAT_TOKEN: ${{ secrets.TF_GIT_PAT_TOKEN }}
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
